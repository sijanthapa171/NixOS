name: Flake Check

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: # Allow manual triggering

jobs:
  flake-check:
    runs-on: ubuntu-24.04
    env:
      NIX_CONFIG: |
        experimental-features = nix-command flakes
        access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          install_url: https://releases.nixos.org/nix/nix-2.22.1/install
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Enable Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: Check flake syntax
        shell: bash
        run: |
          set -eu
          retry() {
            local -r max=3
            local -r delay=10
            local n=1
            until "$@"; do
              if [[ $n -ge $max ]]; then
                echo "Command failed after $n attempts: $*" >&2
                return 1
              fi
              echo "Retry $n/$max: $*" >&2
              sleep $((delay*n))
              n=$((n+1))
            done
          }
          retry nix flake check --no-build

      - name: Verify flake inputs
        shell: bash
        run: |
          set -eu
          retry() {
            local -r max=3
            local -r delay=10
            local n=1
            until "$@"; do
              if [[ $n -ge $max ]]; then
                echo "Command failed after $n attempts: $*" >&2
                return 1
              fi
              echo "Retry $n/$max: $*" >&2
              sleep $((delay*n))
              n=$((n+1))
            done
          }
          retry nix flake metadata

      - name: Check flake outputs
        shell: bash
        run: |
          set -eu
          retry() {
            local -r max=3
            local -r delay=10
            local n=1
            until "$@"; do
              if [[ $n -ge $max ]]; then
                echo "Command failed after $n attempts: $*" >&2
                return 1
              fi
              echo "Retry $n/$max: $*" >&2
              sleep $((delay*n))
              n=$((n+1))
            done
          }
          retry nix flake show

      - name: Validate dependency resolution
        shell: bash
        run: |
          set -eu
          retry() {
            local -r max=3
            local -r delay=10
            local n=1
            until "$@"; do
              if [[ $n -ge $max ]]; then
                echo "Command failed after $n attempts: $*" >&2
                return 1
              fi
              echo "Retry $n/$max: $*" >&2
              sleep $((delay*n))
              n=$((n+1))
            done
          }
          retry nix flake lock --no-update --no-write-lock-file

      - name: Build default package (dry-run)
        shell: bash
        run: |
          set -eu
          retry() {
            local -r max=3
            local -r delay=10
            local n=1
            until "$@"; do
              if [[ $n -ge $max ]]; then
                echo "Command failed after $n attempts: $*" >&2
                return 1
              fi
              echo "Retry $n/$max: $*" >&2
              sleep $((delay*n))
              n=$((n+1))
            done
          }
          retry nix build .#nixosConfigurations.Default.config.system.build.toplevel --dry-run -L

      - name: Run flake checks
        shell: bash
        run: |
          set -eu
          retry() {
            local -r max=3
            local -r delay=10
            local n=1
            until "$@"; do
              if [[ $n -ge $max ]]; then
                echo "Command failed after $n attempts: $*" >&2
                return 1
              fi
              echo "Retry $n/$max: $*" >&2
              sleep $((delay*n))
              n=$((n+1))
            done
          }
          retry nix flake check -L

      - name: Verify formatter
        run: |
          # Check if the formatter is defined and works
          if nix flake show | grep -q formatter; then
            echo "Running formatter check"
            nix fmt -- --check . || {
              echo "Formatter reported issues. Showing diff (non-fatal)";
              nix fmt -- .; git diff --exit-code || true;
            }
          else
            echo "No formatter defined, skipping check"
          fi
